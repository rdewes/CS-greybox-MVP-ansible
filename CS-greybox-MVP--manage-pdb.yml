- name: manage a PDB
  hosts: all
  vars:
    hostname:           "{{ p_host }}"
    port:               "{{ p_port }}"
    service_name:       "{{ p_service }}"
    sourcedb:           "{{ p_cdb_name }}"
    pdbname:            "{{ p_pdb_name }}"
    username:           "{{ p_sysdba_un }}"
    password:           "{{ p_sysdba_pw }}"
    mode:               sysdba
    state:              "{{ p_state }}"
    oracle_home:        /u01/app/oracle/product/12.2.0/dbhome_1
    
  tasks:
    - name: put the pdb into the required state
      oracle_pdb: 
        hostname:       "{{ hostname }}"
        port:           "{{ port }}"
        service_name:   "{{ service_name }}"
        sourcedb:       "{{ sourcedb }}"
        name:           "{{ pdbname }}"
        username:       "{{ username }}"
        password:       "{{ password }}"
        mode:           "{{ mode }}"
        state:          "{{ state }}"
        oracle_home:    "{{ oracle_home }}"
      register: p_pdb_out
    - name: output
      debug:
        var: p_pdb_out.msg
    - name: retrieve new service name
      oracle_sql: 
        hostname:       "{{ hostname }}" 
        port:           "{{ port }}"
        service_name:   "{{ service_name }}"
        username:       "{{ username }}"
        password:       "{{ password }}"
        mode:           "{{ mode }}"
        sql:            >
                        select name 
                        from   v$services 
                        where  name like '{{ pdbname }}.%'
                        and    rownum = 1
#      when: p_pdb_out.msg.find('Successfully created') != -1
      register: p_new_service_name
    - name: show new service name
      debug:
        msg: the value of p_new_service name is {{ p_new_service_name}}
        msg: the value of p_new_service_name.msg is {{ p_new_service_name.msg }}
#        var: "{{ p_new_service_name.msg | regex_findall('([a-zA-Z0-9]*\\.)[a-zA-Z0-9]*') }}"
      when: p_new_service_name is defined
#    - name: create a tablespace
#      oracle_tablespace:
#        hostname:       "{{ hostname }}" 
#        port:           "{{ port }}"
#        service_name:   "{{ p_new_service_name.msg | regex_findall('([a-zA-Z0-9]*\\.)[a-zA-Z0-9]*') }}"
#        user:           "{{ username }}"
#        password:       "{{ password }}"
#        mode:           "{{ mode }}"
#        tablespace:     userdata01
#        state:          present
#        size:           32m
#      when: p_new_service_name is defined
#      register: p_tblspc_out
#    - debug:
#        var: p_tblspc_out
#      when: p_tblspc_out is defined
